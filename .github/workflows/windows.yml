name: Windows

on:
  push:
    branches: [ "1.7.x" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "1.7.x" ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: Default
            os: windows-latest
            triplet: x64-windows
            toolset: v143
            arch: x64
            build-type: Debug
            generator:  "Visual Studio 17 2022"
      fail-fast: false
    
    name: "MSVC ${{ matrix.toolset }} ${{ matrix.arch }} [${{ matrix.build-type }}] test-static=${{ matrix.test-static }} on ${{ matrix.os }}"
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
          script: |
              core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
              core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Install dependencies
      run: vcpkg install --triplet ${{ matrix.triplet }} expat

    - uses: actions/checkout@v4
      with:
        repository: apache/apr
        ref: 1.7.x
        path: apr

    - name: Configure APR
      run: cmake -B ${{github.workspace}}/apr/out/build -S ${{github.workspace}}/apr -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -G "${{ matrix.generator }}" -A ${{ matrix.arch }} -T ${{ matrix.toolset }} -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build APR
      run: cmake --build ${{github.workspace}}/apr/out/build --config ${{ matrix.build-type }}

    - name: Install APR
      run: cmake --install ${{github.workspace}}/apr/out/build --config ${{ matrix.build-type }}

    - uses: actions/checkout@v4
      with:
        path: apu

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/apu/build -S ${{github.workspace}}/apu -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DAPR_BUILD_TESTAPR=ON -DTEST_STATIC_LIBS=${{ matrix.test-static }} -G "${{ matrix.generator }}" -A ${{ matrix.arch }} -T ${{ matrix.toolset }} -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/apu/build --config ${{ matrix.build-type }}

    - name: Test
      working-directory: ${{github.workspace}}/apu/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{ matrix.build-type }} --output-on-failure
